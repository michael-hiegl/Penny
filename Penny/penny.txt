// ESP32 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define LED_BUILTIN 2
#define TASTLED 26

#include <WiFi.h>
#include <esp_wifi.h>
#include <esp_now.h>

const uint8_t newMacAddress[] = { 0x94, 0x3C, 0xC6, 0x33, 0x68, 0x01 };  // Macadresse, die esp32 zugewiesen wird
uint8_t receiverAddress[] = { 0x96, 0x3B, 0xC7, 0x34, 0x69, 0x02 };      // Macadresse von esp8266

esp_now_peer_info_t peerInfo;  // struct mit informationen 端ber esp8266 wird erzeugt

void OnDataSent(const uint8_t *mac_addr, esp_now_send_status_t sendStatus) {
  if (sendStatus == 0) {
    digitalWrite(TASTLED, LOW);
    delay(200);
    digitalWrite(TASTLED, HIGH);
  } else {
    digitalWrite(TASTLED, HIGH);
  }
}

void setup() {
  pinMode(TASTLED, OUTPUT);
  pinMode(LED_BUILTIN, OUTPUT);
  WiFi.mode(WIFI_STA);                           // esp32 wird in station modus versetzt
  esp_wifi_set_mac(WIFI_IF_STA, newMacAddress);  // esp32 wird neue Mac zugewiesen

  if (esp_now_init() != ESP_OK) {
    digitalWrite(LED_BUILTIN, LOW);
  } else {
    digitalWrite(LED_BUILTIN, HIGH);
  }

  memcpy(peerInfo.peer_addr, receiverAddress, 6);  // kopieren der esp8266-Mac in peer_addr
  peerInfo.channel = 0;                            // WLAN channel auf 0 setzen
  peerInfo.encrypt = false;                        // verschl端sselung f端r nachrichten deaktivieren

  esp_now_add_peer(&peerInfo);  // esp8266 wird als kommunikationspartner hinzugef端gt

  esp_now_register_send_cb(OnDataSent);
}

void loop() {
  char message_on[] = "E";
  char message_off[] = "A";

  esp_now_send(receiverAddress, (uint8_t *)message_on, sizeof(message_off));
  delay(1000);
  esp_now_send(receiverAddress, (uint8_t *)message_off, sizeof(message_off));
  delay(1000);
}

// ESP8266 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define RELAISPIN 16

#include <ESP8266WiFi.h>
#include <espnow.h>

uint8_t newMacAddress[] = { 0x96, 0x3B, 0xC7, 0x34, 0x69, 0x02 };

void onoff(uint8_t* macAddr, uint8_t* incomingData, uint8_t len) {
  if (incomingData[0] == 'E') {
    digitalWrite(RELAISPIN, HIGH);
  }
  if (incomingData[0] == 'A') {
    digitalWrite(RELAISPIN, LOW);
  }
}

void setup() {
  pinMode(RELAISPIN, OUTPUT);
  pinMode(LED_BUILTIN, OUTPUT);
  WiFi.mode(WIFI_STA);
  wifi_set_macaddr(STATION_IF, newMacAddress);
  WiFi.disconnect();

  if (esp_now_init() != 0) {
    digitalWrite(LED_BUILTIN, HIGH);
  } else {
    digitalWrite(LED_BUILTIN, LOW);
  }

  esp_now_register_recv_cb(onoff);
}

void loop() {}
